{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\84913\\\\Desktop\\\\crabcounting\\\\front-end\\\\src\\\\screens\\\\signin\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState, useReducer, useEffect } from \"react\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Input, Button } from \"react-native-elements\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport styles from \"./style\";\nimport { Context } from \"../../context\";\nimport axios from \"axios\";\nexport default Index = function Index(props) {\n  var _React$useContext = React.useContext(Context),\n      config = _React$useContext.config,\n      updateConfig = _React$useContext.updateConfig;\n\n  var _React$useState = React.useState({\n    username: \"lucky\",\n    password: \"1\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      submit = _useState4[0],\n      setSubmit = _useState4[1];\n\n  var onChangeHanlde = function onChangeHanlde(key, value) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, key, value)));\n  };\n\n  var submitHandle = function submitHandle() {\n    setSubmit(true);\n\n    if (values.username && values.password) {\n      axios.post(config.host + \"/api/auth/login\", {\n        username: values.username,\n        password: values.password\n      }).then(function (_ref) {\n        var data = _ref.data;\n        updateConfig(_objectSpread(_objectSpread({}, config), {}, {\n          token: data.token\n        }));\n        axios.defaults.headers[\"Authorization\"] = \"Bearer \" + data.token;\n      }).catch(function (err) {\n        alert(\"User name or password is invalid\");\n      });\n    }\n  };\n\n  return React.createElement(ImageBackground, {\n    source: require(\"../../../assets/logo.png\"),\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    blurRadius: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.subTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"\\u1EE8NG D\\u1EE4NG\"), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"\\u0110\\u1EBEM CUA GI\\u1ED0NG\"), React.createElement(View, {\n    style: styles.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Số điện thoại\",\n    value: values.username,\n    onChangeText: function onChangeText(t) {\n      return onChangeHanlde(\"username\", t);\n    },\n    type: \"username\",\n    leftIcon: React.createElement(Icon, {\n      name: \"user\",\n      size: 24,\n      color: \"white\",\n      style: styles.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }),\n    containerStyle: styles.input,\n    placeholderTextColor: \"lightgrey\",\n    inputStyle: {\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    value: values.password,\n    onChangeText: function onChangeText(t) {\n      return onChangeHanlde(\"password\", t);\n    },\n    type: \"password\",\n    placeholder: \"Mật khẩu\",\n    secureTextEntry: true,\n    leftIcon: React.createElement(Icon, {\n      name: \"key\",\n      size: 24,\n      color: \"white\",\n      style: styles.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }),\n    placeholderTextColor: \"lightgrey\",\n    inputStyle: {\n      color: \"white\"\n    },\n    containerStyle: styles.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"Đăng nhập\",\n    containerStyle: styles.login,\n    onPress: submitHandle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["C:/Users/84913/Desktop/crabcounting/front-end/src/screens/signin/index.js"],"names":["React","useContext","useState","useReducer","useEffect","Icon","Input","Button","styles","Context","axios","Index","props","config","updateConfig","username","password","values","setValues","status","setStatus","submit","setSubmit","onChangeHanlde","key","value","submitHandle","post","host","then","data","token","defaults","headers","catch","err","alert","require","width","height","container","subTitle","title","form","t","icon","input","color","login"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useReducer, useEffect } from \"react\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { Input, Button } from \"react-native-elements\";\r\nimport { View, Text, ImageBackground } from \"react-native\";\r\nimport styles from \"./style\";\r\nimport { Context } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nexport default Index = (props) => {\r\n  const { config, updateConfig } = React.useContext(Context);\r\n  const [values, setValues] = React.useState({\r\n    username: \"lucky\",\r\n    password: \"1\",\r\n  });\r\n  const [status, setStatus] = useState(null);\r\n  const [submit, setSubmit] = useState(false);\r\n\r\n  const onChangeHanlde = (key, value) => {\r\n    setValues({ ...values, [key]: value });\r\n  };\r\n\r\n  const submitHandle = () => {\r\n    setSubmit(true);\r\n    if (values.username && values.password) {\r\n      axios\r\n        .post(`${config.host}/api/auth/login`, {\r\n          username: values.username,\r\n          password: values.password,\r\n        })\r\n        .then(({ data }) => {\r\n          updateConfig({ ...config, token: data.token });\r\n          axios.defaults.headers[\"Authorization\"] = `Bearer ${data.token}`;\r\n        })\r\n        .catch((err) => {\r\n          alert(\"User name or password is invalid\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require(\"../../../assets/logo.png\")}\r\n      style={{ width: \"100%\", height: \"100%\", }}\r\n      blurRadius={10}\r\n    >\r\n      <View style={styles.container}>\r\n        <Text style={styles.subTitle}>{`ỨNG DỤNG`}</Text>\r\n        <Text style={styles.title}>{`ĐẾM CUA GIỐNG`}</Text>\r\n        <View style={styles.form}>\r\n          <Input\r\n            placeholder={\"Số điện thoại\"}\r\n            value={values.username}\r\n            onChangeText={(t) => onChangeHanlde(\"username\", t)}\r\n            type={\"username\"}\r\n            leftIcon={\r\n              <Icon name=\"user\" size={24} color=\"white\" style={styles.icon} />\r\n            }\r\n            containerStyle={styles.input}\r\n            placeholderTextColor=\"lightgrey\"\r\n            inputStyle={{ color: \"white\" }}\r\n          />\r\n\r\n          <Input\r\n            value={values.password}\r\n            onChangeText={(t) => onChangeHanlde(\"password\", t)}\r\n            type={\"password\"}\r\n            placeholder={\"Mật khẩu\"}\r\n            secureTextEntry={true}\r\n            leftIcon={\r\n              <Icon name=\"key\" size={24} color=\"white\" style={styles.icon} />\r\n            }\r\n            placeholderTextColor=\"lightgrey\"\r\n            inputStyle={{ color: \"white\" }}\r\n            containerStyle={styles.input}\r\n          />\r\n\r\n          <Button\r\n            title={\"Đăng nhập\"}\r\n            containerStyle={styles.login}\r\n            onPress={submitHandle}\r\n          />\r\n        </View>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}